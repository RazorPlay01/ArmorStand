--- orig-sources/com/terraformersmc/modmenu/gui/widget/DescriptionListWidget.java
+++ sources/com/terraformersmc/modmenu/gui/widget/DescriptionListWidget.java
@@ -1,7 +1,5 @@
 package com.terraformersmc.modmenu.gui.widget;
 
-import com.mojang.blaze3d.buffers.BufferType;
-import com.mojang.blaze3d.buffers.BufferUsage;
 import com.mojang.blaze3d.buffers.GpuBuffer;
 import com.mojang.blaze3d.pipeline.RenderPipeline;
 import com.mojang.blaze3d.systems.RenderPass;
@@ -303,14 +301,14 @@
                 Framebuffer framebuffer = MinecraftClient.getInstance().getFramebuffer();
                 RenderSystem.ShapeIndexBuffer autoStorageIndexBuffer = RenderSystem.getSequentialBuffer(pipeline.getVertexFormatMode());
                 VertexFormat.IndexType indexType = autoStorageIndexBuffer.getIndexType();
-                GpuBuffer vertexBuffer = RenderSystem.getDevice().createBuffer(() -> "Description List", BufferType.VERTICES, BufferUsage.DYNAMIC_WRITE, builtBuffer.getBuffer().remaining());
+                GpuBuffer vertexBuffer = RenderSystem.getDevice().createBuffer(() -> "Description List", GpuBuffer.USAGE_VERTEX | GpuBuffer.USAGE_COPY_DST, builtBuffer.getBuffer().remaining());
                 GpuBuffer indexBuffer = autoStorageIndexBuffer.getIndexBuffer(builtBuffer.getDrawParameters().indexCount());
-                RenderSystem.getDevice().createCommandEncoder().writeToBuffer(vertexBuffer, builtBuffer.getBuffer(), 0);
-                try (RenderPass renderPass = RenderSystem.getDevice().createCommandEncoder().createRenderPass(framebuffer.getColorAttachment(), OptionalInt.empty(), framebuffer.getDepthAttachment(), OptionalDouble.empty())) {
+                RenderSystem.getDevice().createCommandEncoder().writeToBuffer(vertexBuffer.slice(), builtBuffer.getBuffer());
+                try (RenderPass renderPass = RenderSystem.getDevice().createCommandEncoder().createRenderPass(() -> "Description List", framebuffer.getColorAttachmentView(), OptionalInt.empty(), framebuffer.getDepthAttachmentView(), OptionalDouble.empty())) {
                     renderPass.setPipeline(pipeline);
                     renderPass.setVertexBuffer(0, vertexBuffer);
                     renderPass.setIndexBuffer(indexBuffer, indexType);
-                    renderPass.drawIndexed(0, builtBuffer.getDrawParameters().indexCount());
+                    renderPass.drawIndexed(0, 0, builtBuffer.getDrawParameters().indexCount(), 1);
                 }
             }
         }
